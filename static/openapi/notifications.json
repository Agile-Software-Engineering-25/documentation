{
  "openapi": "3.1.1",
  "info": {
    "title": "Notification Service",
    "description": "Microservice for notifications – allows sending messages to users or user groups.\n\nAnyone who wants to use the message sending functionality in their service must have Team 10 add the role \"Area-4.Team-15.Write.SendNotification\" to their service. With this role, the service can obtain a JWT, which it then sends along with the request, allowing us to verify the permissions.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://sau-portal.de/notification-service/api/v1",
      "description": "Production server (deployment only with authentication!)"
    }
  ],
  "security": [
    { "bearerAuth": [] }
  ],
  "paths": {
    "/notifications": {
      "post": {
        "summary": "Create notifications (optionally send email)",
        "description": "Sends a notification to one or more users or to user groups. Requires a valid JWT Bearer Token. Delivery can be email, UI, or both via notifyType.\n\nEmail behavior:\n- If notifyType is Mail or All and emailTemplate is provided → that template is used with variables.\n- If notifyType is Mail or All and emailTemplate is omitted → the server uses the GENERIC template for all notificationType values (Info, Warning, Congratulation, None). Missing variables simply hide sections.\n- Email subject is always taken from title. The in-body visual header comes from variables.header if set; otherwise it falls back to title or a type-based default; if still missing the template shows \"Benachrichtigung\".",
        "operationId": "postNotification",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NotificationCreationDto" },
              "examples": {
                "minimalMail": {
                  "summary": "Minimal email (server uses GENERIC with defaults)",
                  "value": {
                    "users": ["1"],
                    "title": "Willkommen",
                    "message": "Willkommen bei SAU!",
                    "notifyType": "Mail",
                    "notificationType": "Info"
                  }
                },
                "fullGeneric": {
                  "summary": "Explicit GENERIC with variables",
                  "value": {
                    "users": ["1"],
                    "title": "Abgabefrist DB Systems Lab",
                    "message": "Abgabe bis 20.10.2025, 23:59 Uhr.",
                    "notifyType": "Mail",
                    "notificationType": "Info",
                    "emailTemplate": "GENERIC",
                    "variables": {
                      "header": "Abgabe",
                      "name": "Max Mustermann",
                      "highlightLine": "Abgabe DB Systems Lab bis 20.10.2025, 23:59 Uhr.",
                      "ctaUrl": "https://portal.example.edu/assignments/42",
                      "ctaLabel": "Zur Aufgabe",
                      "footer": "SAU (Student Assistance Utilities)"
                    }
                  }
                },
                "noneWithGeneric": {
                  "summary": "notificationType=None still renders via GENERIC",
                  "value": {
                    "users": ["1"],
                    "title": "Hinweis",
                    "message": "Nur eine kurze Info.",
                    "notifyType": "Mail",
                    "notificationType": "None",
                    "variables": {
                      "body": ["Nur eine kurze Info."]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification created. Returns an array of created notifications (one per recipient).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Notification" }
                },
                "example": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174020",
                    "userId": "123e4567-e89b-12d3-a456-426614174000",
                    "title": "System Update",
                    "message": "The system will be undergoing maintenance on Sunday at 2 AM.",
                    "shortDescription": "Scheduled maintenance notification",
                    "priority": true,
                    "notifyType": "All",
                    "notificationType": "Info",
                    "receivedAt": "2025-10-15T10:30:00Z",
                    "readAt": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": {
                  "error": "Bad Request",
                  "details": "Title and message are required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – JWT is missing or invalid",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": { "error": "Unauthorized", "details": "JWT token is missing or invalid" }
              }
            }
          },
          "403": {
            "description": "Forbidden – Insufficient permissions",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": { "error": "Forbidden", "details": "Insufficient permissions to send notifications" }
              }
            }
          },
          "404": {
            "description": "Not Found - One or more specified groups do not exist",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": { "error": "Not Found", "details": "One or more groups not found" }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Error fetching group members or other server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" },
                "example": { "error": "Internal Server Error", "details": "Error fetching group members" }
              }
            }
          }
        }
      }
    },
    "/emails": {
      "post": {
        "summary": "Send email",
        "description": "Sends an email to one or more recipients. Requires a valid JWT Bearer Token.\n\nUse this when no notification can be created (e.g., recipient has no account yet). Otherwise, prefer `/notifications` with `notifyType='Mail'` or `'All'`.\n\nEmail can be sent as plain text or using the GENERIC template with variables. If `template` is omitted here, `text` must be provided.",
        "operationId": "sendEmail",
        "security": [ { "bearerAuth": [] } ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EmailNotificationRequestDto" },
              "examples": {
                "templated": {
                  "summary": "Using GENERIC with variables",
                  "value": {
                    "to": ["max.mustermann@example.com"],
                    "subject": "Abgabefrist DB Systems Lab",
                    "template": "GENERIC",
                    "variables": {
                      "header": "Abgabe",
                      "name": "Max Mustermann",
                      "highlightLine": "Abgabe DB Systems Lab bis 20.10.2025, 23:59 Uhr.",
                      "ctaUrl": "https://portal.example.edu/assignments/42",
                      "ctaLabel": "Zur Aufgabe"
                    },
                    "replyTo": "noreply@example.com"
                  }
                },
                "plainText": {
                  "summary": "Plain-text only (no template)",
                  "value": {
                    "to": ["max.mustermann@example.com"],
                    "subject": "Systemhinweis",
                    "text": "Wartung heute um 22:00 Uhr. Bitte speichern Sie Ihre Arbeit.",
                    "replyTo": "support@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": { "description": "Email accepted for delivery (no content)" },
          "400": {
            "description": "Validation error or no content (neither template nor text provided)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "no content, provide either a template or text" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "SMTP authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "SMTP authentication failed" }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Mail server error (MessagingException or encoding issues)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Mail server error" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT-based authentication using Bearer tokens. Required role: Area-4.Team-15.Write.SendNotification"
      }
    },
    "schemas": {
      "NotificationCreationDto": {
        "type": "object",
        "required": ["title", "message"],
        "properties": {
          "users": {
            "type": "array",
            "items": { "type": "string", "format": "uuid" },
            "description": "List of user UUIDs to receive the notification. Can be combined with groups.",
            "example": ["123e4567-e89b-12d3-a456-426614174000"]
          },
          "groups": {
            "type": "array",
            "items": { "type": "string" },
            "description": "List of group names to receive the notification. All users in these groups will receive the notification. Can be combined with users.",
            "example": ["Administrators", "Developers"]
          },
          "title": {
            "type": "string",
            "description": "Title of the notification. Used as the email subject if an email is sent.",
            "example": "System Update"
          },
          "message": {
            "type": "string",
            "description": "The notification message content. Used in UI and as the plain-text part for emails.",
            "example": "The system will be undergoing maintenance on Sunday at 2 AM."
          },
          "priority": {
            "type": "boolean",
            "default": false,
            "description": "High priority notifications may be displayed more prominently; the email subject may be prefixed.",
            "example": true
          },
          "shortDescription": {
            "type": "string",
            "description": "Short description / preview. Used as email preheader when available.",
            "example": "Scheduled maintenance notification"
          },
          "notifyType": {
            "type": "string",
            "enum": ["Mail", "UI", "All"],
            "description": "Delivery method: Mail (email only), UI (UI only), or All (both).",
            "example": "All"
          },
          "notificationType": {
            "type": "string",
            "enum": ["Info", "Warning", "Congratulation", "None"],
            "description": "Semantic type used for tone and defaults. When notifyType includes Mail and no emailTemplate is provided, the server uses the GENERIC template for all values, including None.",
            "example": "Info"
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplate",
            "description": "Optional email template. If omitted and email is requested, the server uses GENERIC for all notification types."
          },
          "variables": {
            "$ref": "#/components/schemas/TemplateVariables",
            "description": "Optional template variables; ignored for UI-only notifications."
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the notification (auto-generated)"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user who receives the notification"
          },
          "title": { "type": "string", "description": "Title of the notification" },
          "message": { "type": "string", "description": "Notification message content" },
          "shortDescription": { "type": "string", "description": "Short description / preview" },
          "priority": { "type": "boolean", "description": "Priority flag" },
          "notifyType": {
            "type": "string",
            "enum": ["Mail", "UI", "All"],
            "description": "Delivery method"
          },
          "notificationType": {
            "type": "string",
            "enum": ["Info", "Warning", "Congratulation", "None"],
            "description": "Semantic type / tone"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the notification was created (ISO 8601)"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the notification was read (null if unread)"
          }
        }
      },
      "EmailNotificationRequestDto": {
        "type": "object",
        "required": ["to", "subject"],
        "properties": {
          "to": {
            "type": "array",
            "items": { "type": "string", "format": "email" },
            "minItems": 1,
            "description": "Recipient email addresses.",
            "example": ["user@example.com"]
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "description": "Email subject line.",
            "example": "Abgabefrist DB Systems Lab"
          },
          "text": {
            "type": "string",
            "nullable": true,
            "description": "Plain-text body. Used when no template is provided. If both are provided, this is used as the plain-text alternative part.",
            "example": "Abgabe bis 20.10.2025, 23:59 Uhr."
          },
          "template": {
            "$ref": "#/components/schemas/EmailTemplate",
            "description": "Optional. When set, the server renders the matching Thymeleaf template with variables. If omitted, text must be provided; otherwise HTTP 400."
          },
          "variables": {
            "$ref": "#/components/schemas/TemplateVariables",
            "description": "Optional key-value variables for the template."
          },
          "ctaLink": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "Optional legacy alias for variables.ctaUrl. The server may copy it into the variables map.",
            "example": "https://portal.example.edu/assignments/42"
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "description": "Optional reply-to address.",
            "example": "noreply@example.com"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string", "description": "Error message summary" },
          "details": { "type": "string", "description": "Detailed error description" }
        }
      },
      "EmailTemplate": {
        "type": "string",
        "description": "Matches server-side enum / template filenames.",
        "enum": ["GENERIC"]
      },
      "TemplateVariables": {
        "type": "object",
        "description": "Key-value variables used by the generic email template. All fields optional; missing sections do not render.",
        "properties": {
          "header": { "type": "string", "example": "Abgabe" },
          "name": { "type": "string", "example": "Max Mustermann" },
          "body": {
            "type": "array",
            "description": "List of paragraph texts.",
            "items": { "type": "string" },
            "example": ["Bitte reiche deine Aufgabe rechtzeitig ein."]
          },
          "highlightLine": { "type": "string", "example": "Abgabe DB Systems Lab bis 20.10.2025, 23:59 Uhr." },
          "facts": {
            "type": "array",
            "description": "Structured key/value facts (e.g., Course, Deadline, Grade).",
            "items": {
              "type": "object",
              "required": ["key", "value"],
              "properties": {
                "key": { "type": "string", "example": "Kurs" },
                "value": { "type": "string", "example": "DB Systems Lab" }
              }
            }
          },
          "ctaUrl": { "type": "string", "format": "uri", "example": "https://portal.example.edu/assignments/42" },
          "ctaLabel": { "type": "string", "example": "Zur Aufgabe" },
          "secondaryLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["label", "url"],
              "properties": {
                "label": { "type": "string", "example": "Mehr Info" },
                "url": { "type": "string", "format": "uri", "example": "https://provadis.de" }
              }
            }
          },
          "note": { "type": "string", "example": "Diese Mail wurde automatisch generiert." },
          "footer": { "type": "string", "example": "SAU (Student Assistance Utilities)" },
          "logoUrl": { "type": "string", "format": "uri", "example": "https://example.com/logo.svg" },
          "preheader": { "type": "string", "example": "Abgabe DB Systems Lab steht an" }
        }
      }
    }
  }
}
