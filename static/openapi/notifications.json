{
  "openapi": "3.1.1",
  "info": {
    "title": "Notification Service",
    "description": "Microservice for notifications – allows sending messages to users or user groups.\n\nAnyone who wants to use the message sending functionality in their service must have Team 10 add the role \"Area-4.Team-15.Write.SendNotification\" to their service. With this role, the service can obtain a JWT, which it then sends along with the request, allowing us to verify the permissions.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://sau-portal.de/notification-service/api/v1",
      "description": "Production server (deployment only with authentication!)"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/notifications": {
      "post": {
        "summary": "Create notifications (optionally send email)",
        "description": "Sends a notification to one or more users or to user groups. Requires a valid JWT Bearer Token. The notification can be delivered via email, UI, or both depending on the notifyType parameter.",
        "operationId": "postNotification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreationDto"
              },
              "examples": {
                "minimalMail": {
                  "summary": "Minimal email (template chosen by server)",
                  "value": {
                    "users": [
                      "1"
                    ],
                    "title": "Willkommen",
                    "message": "Willkommen bei SAU!",
                    "notifyType": "Mail",
                    "notificationType": "Info"
                  }
                },
                "fullGenericWithCta": {
                  "summary": "Explicit GENERIC_WITH_CTA with variables",
                  "value": {
                    "users": [
                      "1"
                    ],
                    "title": "Abgabefrist DB Systems Lab",
                    "message": "Abgabe bis 20.10.2025, 23:59 Uhr.",
                    "notifyType": "Mail",
                    "notificationType": "Info",
                    "emailTemplate": "GENERIC_WITH_CTA",
                    "variables": {
                      "header": "Abgabe",
                      "name": "Max Mustermann",
                      "highlightLine": "Abgabe DB Systems Lab bis 20.10.2025, 23:59 Uhr.",
                      "ctaUrl": "https://portal.example.edu/assignments/42",
                      "ctaLabel": "Zur Aufgabe",
                      "footer": "SAU (Student Assistance Utilities)"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification sent successfully. Returns an array of created notifications (one per recipient).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                },
                "example": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174020",
                    "userId": "123e4567-e89b-12d3-a456-426614174000",
                    "title": "System Update",
                    "message": "The system will be undergoing maintenance on Sunday at 2 AM.",
                    "shortDescription": "Scheduled maintenance notification",
                    "priority": true,
                    "notifyType": "All",
                    "notificationType": "Info",
                    "receivedAt": "2025-10-15T10:30:00Z",
                    "readAt": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Bad Request",
                  "details": "Title and message are required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – JWT is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unauthorized",
                  "details": "JWT token is missing or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden – User not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Forbidden",
                  "details": "Insufficient permissions to send notifications"
                }
              }
            }
          },
          "501": {
            "description": "Group notifications disabled",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/emails": {
      "post": {
        "summary": "Send email",
        "description": "Sends an email to one or more recipients. Requires a valid JWT Bearer Token.\n\nNote: This endpoint should only be used when a notification cannot be created (e.g., when the recipient does not have an account yet). For standard use cases, creating a notification via the /notifications endpoint with notifyType='Mail' or 'All' can automatically send an email to the user.\n\nThe email can be sent as plain text or using a predefined template with variables.",
        "operationId": "sendEmail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationRequestDto"
              },
              "examples": {
                "templated": {
                  "summary": "Using a template with variables",
                  "value": {
                    "to": [
                      "max.mustermann@example.com"
                    ],
                    "subject": "Abgabefrist DB Systems Lab",
                    "template": "GENERIC_WITH_CTA",
                    "variables": {
                      "header": "Abgabe",
                      "name": "Max Mustermann",
                      "highlightLine": "Abgabe DB Systems Lab bis 20.10.2025, 23:59 Uhr.",
                      "ctaUrl": "https://portal.example.edu/assignments/42",
                      "ctaLabel": "Zur Aufgabe"
                    },
                    "replyTo": "noreply@example.com"
                  }
                },
                "plainText": {
                  "summary": "Plain-text only (no template)",
                  "value": {
                    "to": [
                      "max.mustermann@example.com"
                    ],
                    "subject": "Systemhinweis",
                    "text": "Wartung heute um 22:00 Uhr. Bitte speichern Sie Ihre Arbeit.",
                    "replyTo": "support@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Email accepted for delivery (no content)"
          },
          "400": {
            "description": "Validation error or no content (neither template nor text provided)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "no content, provide either a template or text"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "SMTP authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "SMTP authentication failed"
                    }
                  }
                }
              }
            }
          },
          "502": {
            "description": "Mail server error (MessagingException or encoding issues)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Mail server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emails": {
      "post": {
        "summary": "Send email",
        "description": "Sends an email to one or more users. Requires a valid JWT Bearer Token.\n\nNote: This endpoint should only be used when a notification cannot be created (e.g., when the recipient does not have an account yet). For standard use cases, creating a notification via the /notifications endpoint can automatically send an email to the user if configured.",
        "operationId": "sendEmail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Email sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – JWT is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden – User not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT-based authentication using Bearer tokens. Required role: Area-4.Team-15.Write.SendNotification"
      }
    },
    "schemas": {
      "NotificationCreationDto": {
        "type": "object",
        "required": [
          "title",
          "message"
        ],
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user UUIDs to receive the notification. Can be combined with groups.",
            "example": [
              "123e4567-e89b-12d3-a456-426614174000",
              "123e4567-e89b-12d3-a456-426614174001"
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of group UUIDs to receive the notification. All users in these groups will receive the notification. Can be combined with users.",
            "example": [
              "123e4567-e89b-12d3-a456-426614174010"
            ]
          },
          "title": {
            "type": "string",
            "description": "Title of the notification (required)",
            "example": "System Update"
          },
          "message": {
            "type": "string",
            "description": "The notification message content (required)",
            "example": "The system will be undergoing maintenance on Sunday at 2 AM."
          },
          "priority": {
            "type": "boolean",
            "default": false,
            "description": "Priority flag of the notification. High priority notifications may be displayed more prominently.",
            "example": true
          },
          "shortDescription": {
            "type": "string",
            "description": "Short description or preview of the notification",
            "example": "Scheduled maintenance notification"
          },
          "notifyType": {
            "type": "string",
            "enum": [
              "Mail",
              "UI",
              "All"
            ],
            "description": "Notification delivery method:\n- Mail: Send only via email\n- UI: Display only in the UI\n- All: Send via both email and UI",
            "example": "All"
          },
          "notifyType": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Congratulation",
              "None"
            ],
            "example": "Info"
          },
          "emailTemplate": {
            "$ref": "#/components/schemas/EmailTemplate",
            "description": "Optional email template. When notifyType is 'Mail' or 'All', specifies which email template to use. If omitted, server chooses a default template."
          },
          "variables": {
            "$ref": "#/components/schemas/TemplateVariables",
            "description": "Optional template variables; ignored for UI-only notifications."
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the notification (auto-generated)",
            "example": "123e4567-e89b-12d3-a456-426614174020"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user who receives the notification",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "title": {
            "type": "string",
            "description": "Title of the notification",
            "example": "System Update"
          },
          "message": {
            "type": "string",
            "description": "The notification message content",
            "example": "The system will be undergoing maintenance on Sunday at 2 AM."
          },
          "shortDescription": {
            "type": "string",
            "description": "Short description or preview of the notification",
            "example": "Scheduled maintenance notification"
          },
          "priority": {
            "type": "boolean",
            "description": "Priority flag of the notification",
            "example": true
          },
          "notifyType": {
            "type": "string",
            "enum": [
              "Mail",
              "UI",
              "All"
            ],
            "description": "Notification delivery method",
            "example": "All"
          },
          "notifyType": {
            "type": "string",
            "description": "Notification delivery method (Mail, UI, All)"
          },
          "notificationType": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Congratulation",
              "None"
            ],
            "description": "Visual display type",
            "example": "Info"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the notification was created and received (ISO 8601 format)",
            "example": "2025-10-15T10:30:00Z"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the notification was read (ISO 8601 format). Null if the notification is unread.",
            "example": "2025-10-15T11:00:00Z"
          }
        }
      },
      "EmailNotificationRequestDto": {
        "type": "object",
        "required": [
          "to",
          "subject"
        ],
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "minItems": 1,
            "description": "List of email addresses to send the email to (required). Each email must be a valid email address.",
            "example": [
              "user@example.com",
              "admin@example.com"
            ]
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "description": "Email subject line (required)",
            "example": "Welcome to Our Platform"
          },
          "text": {
            "type": "string",
            "nullable": true,
            "description": "Plain-text body. Used when no template is provided.\nIf both template and text are provided, text is used as the plain-text alternative part.",
            "example": "Abgabe bis 20.10.2025, 23:59 Uhr."
          },
          "template": {
            "$ref": "#/components/schemas/EmailTemplate",
            "description": "Optional. When set, the server renders the matching Thymeleaf template with variables.\nIf omitted, text must be provided; otherwise the server returns HTTP 400."
          },
          "variables": {
            "$ref": "#/components/schemas/TemplateVariables",
            "description": "Optional key-value variables consumed by the selected template. All fields optional.",
            "example": "https://portal.example.edu/assignments/42"
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "Reply-to email address. If specified, replies to the email will be sent to this address instead of the sender.",
            "example": "support@example.com"
          }
        }
      },
      "EmailRequest": {
        "type": "object",
        "required": [
          "to",
          "subject",
          "body"
        ],
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "description": "List of email addresses to send the email to"
          },
          "subject": {
            "type": "string",
            "description": "Email subject"
          },
          "body": {
            "type": "string",
            "description": "Email body content"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the notification was read (null if unread)"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message summary",
            "example": "Bad Request"
          },
          "details": {
            "type": "string",
            "description": "Detailed error description",
            "example": "Invalid email address format"
          }
        }
      },
      "EmailTemplate": {
        "type": "string",
        "description": "Matches server-side enum / template filenames.",
        "enum": [
          "GENERIC",
          "GENERIC_WITH_CTA"
        ]
      },
      "TemplateVariables": {
        "type": "object",
        "description": "Key-value variables used by the selected email template. All fields optional.",
        "properties": {
          "header": {
            "type": "string",
            "example": "Abgabe"
          },
          "name": {
            "type": "string",
            "example": "Max Mustermann"
          },
          "body": {
            "type": "array",
            "description": "List of paragraph texts.",
            "items": {
              "type": "string"
            },
            "example": [
              "Bitte reiche deine Aufgabe rechtzeitig ein."
            ]
          },
          "highlightLine": {
            "type": "string",
            "example": "Abgabe DB Systems Lab bis 20.10.2025, 23:59 Uhr."
          },
          "facts": {
            "type": "array",
            "description": "Structured key/value facts (e.g., Course, Deadline, Grade).",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "example": "Kurs"
                },
                "value": {
                  "type": "string",
                  "example": "DB Systems Lab"
                }
              }
            }
          },
          "ctaUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://portal.example.edu/assignments/42"
          },
          "ctaLabel": {
            "type": "string",
            "example": "Zur Aufgabe"
          },
          "secondaryLinks": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "label",
                "url"
              ],
              "properties": {
                "label": {
                  "type": "string",
                  "example": "Mehr Info"
                },
                "url": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://provadis.de"
                }
              }
            }
          },
          "note": {
            "type": "string",
            "example": "Diese Mail wurde automatisch generiert."
          },
          "footer": {
            "type": "string",
            "example": "SAU (Student Assistance Utilities)"
          },
          "logoUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/logo.svg"
          },
          "preheader": {
            "type": "string",
            "example": "Abgabe DB Systems Lab steht an"
          }
        }
      }
    }
  }
}
