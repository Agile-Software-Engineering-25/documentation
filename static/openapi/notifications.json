{
  "openapi": "3.1.1",
  "info": {
    "title": "Notification Microservice API",
    "description": "Microservice for notifications – allows sending messages to users or user groups.\n\nAnyone who wants to use the message sending functionality in their service must have Team 10 add the role \"Area-4.Team-15.Write.SendNotification\" to their service. With this role, the service can obtain a JWT, which it then sends along with the request, allowing us to verify the permissions.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://sau-portal.de/notification-service/api/v1",
      "description": "Production server (deployment only with authentication!)"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/notifications": {
      "post": {
        "summary": "Send notification",
        "description": "Sends a notification to one or more users or to user groups. Requires a valid JWT Bearer Token. The notification can be delivered via email, UI, or both depending on the notifyType parameter.",
        "operationId": "sendNotification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationCreationDto"
              },
              "examples": {
                "notificationToUsers": {
                  "summary": "Notification to specific users",
                  "value": {
                    "users": [
                      "123e4567-e89b-12d3-a456-426614174000",
                      "123e4567-e89b-12d3-a456-426614174001"
                    ],
                    "title": "System Update",
                    "message": "The system will be undergoing maintenance on Sunday at 2 AM.",
                    "shortDescription": "Scheduled maintenance notification",
                    "priority": true,
                    "notifyType": "All",
                    "notificationType": "Info"
                  }
                },
                "notificationToGroups": {
                  "summary": "Notification to user groups",
                  "value": {
                    "groups": [
                      "123e4567-e89b-12d3-a456-426614174010"
                    ],
                    "title": "New Feature Available",
                    "message": "Check out our new dashboard analytics feature!",
                    "shortDescription": "New feature announcement",
                    "priority": false,
                    "notifyType": "UI",
                    "notificationType": "Congratulation"
                  }
                },
                "notificationToUsersAndGroups": {
                  "summary": "Notification to both users and groups",
                  "value": {
                    "users": [
                      "123e4567-e89b-12d3-a456-426614174000"
                    ],
                    "groups": [
                      "123e4567-e89b-12d3-a456-426614174010"
                    ],
                    "title": "Security Alert",
                    "message": "Suspicious activity detected on your account. Please review your recent activities.",
                    "shortDescription": "Security notification",
                    "priority": true,
                    "notifyType": "All",
                    "notificationType": "Warning"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Notification sent successfully. Returns an array of created notifications (one per recipient).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Notification"
                  }
                },
                "example": [
                  {
                    "id": "123e4567-e89b-12d3-a456-426614174020",
                    "userId": "123e4567-e89b-12d3-a456-426614174000",
                    "title": "System Update",
                    "message": "The system will be undergoing maintenance on Sunday at 2 AM.",
                    "shortDescription": "Scheduled maintenance notification",
                    "priority": true,
                    "notifyType": "All",
                    "notificationType": "Info",
                    "receivedAt": "2025-10-15T10:30:00Z",
                    "readAt": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Bad Request",
                  "details": "Title and message are required fields"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – JWT is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unauthorized",
                  "details": "JWT token is missing or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden – User not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Forbidden",
                  "details": "Insufficient permissions to send notifications"
                }
              }
            }
          },
          "501": {
            "description": "Not Implemented - Group service unavailable or error fetching group members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Group service is currently unavailable"
              }
            }
          }
        }
      }
    },
    "/emails": {
      "post": {
        "summary": "Send email",
        "description": "Sends an email to one or more recipients. Requires a valid JWT Bearer Token.\n\nNote: This endpoint should only be used when a notification cannot be created (e.g., when the recipient does not have an account yet). For standard use cases, creating a notification via the /notifications endpoint with notifyType='Mail' or 'All' can automatically send an email to the user.\n\nThe email can be sent as plain text or using a predefined template with variables.",
        "operationId": "sendEmail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailNotificationRequestDto"
              },
              "examples": {
                "plainTextEmail": {
                  "summary": "Plain text email",
                  "value": {
                    "to": [
                      "user@example.com",
                      "admin@example.com"
                    ],
                    "subject": "Welcome to Our Platform",
                    "text": "Hello! Welcome to our platform. We're excited to have you here.",
                    "replyTo": "support@example.com"
                  }
                },
                "templateEmailWelcome": {
                  "summary": "Email using WELCOME template",
                  "value": {
                    "to": [
                      "newuser@example.com"
                    ],
                    "subject": "Welcome to Our Platform",
                    "template": "WELCOME",
                    "variables": {
                      "userName": "John Doe",
                      "activationLink": "https://example.com/activate/abc123"
                    },
                    "replyTo": "support@example.com"
                  }
                },
                "templateEmailGenericCTA": {
                  "summary": "Email using GENERIC_WITH_CTA template",
                  "value": {
                    "to": [
                      "user@example.com"
                    ],
                    "subject": "Complete Your Profile",
                    "template": "GENERIC_WITH_CTA",
                    "variables": {
                      "title": "Complete Your Profile",
                      "message": "Please take a moment to complete your profile to get the most out of our platform.",
                      "ctaText": "Complete Profile"
                    },
                    "ctaLink": "https://example.com/profile/complete",
                    "replyTo": "noreply@example.com"
                  }
                },
                "templateEmailResetPassword": {
                  "summary": "Email using RESET_PASSWORD template",
                  "value": {
                    "to": [
                      "user@example.com"
                    ],
                    "subject": "Reset Your Password",
                    "template": "RESET_PASSWORD",
                    "variables": {
                      "userName": "Jane Smith",
                      "resetLink": "https://example.com/reset-password/token123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Email accepted for sending. The email has been queued and will be sent asynchronously.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "Email sent successfully"
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid email addresses, missing required fields, or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "invalidEmail": {
                    "summary": "Invalid email address",
                    "value": {
                      "error": "Bad Request",
                      "details": "Invalid email address format"
                    }
                  },
                  "missingSubject": {
                    "summary": "Missing required field",
                    "value": {
                      "error": "Bad Request",
                      "details": "Subject is required"
                    }
                  },
                  "invalidTemplate": {
                    "summary": "Invalid template",
                    "value": {
                      "error": "Bad Request",
                      "details": "Template must be one of: WELCOME, RESET_PASSWORD, GENERIC_WITH_CTA"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized – JWT is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Unauthorized",
                  "details": "JWT token is missing or invalid"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden – User not allowed to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Forbidden",
                  "details": "Insufficient permissions to send emails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Email service error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "example": {
                  "error": "Internal Server Error",
                  "details": "Failed to send email due to mail server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT-based authentication using Bearer tokens. Required role: Area-4.Team-15.Write.SendNotification"
      }
    },
    "schemas": {
      "NotificationCreationDto": {
        "type": "object",
        "required": [
          "title",
          "message"
        ],
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of user UUIDs to receive the notification. Can be combined with groups.",
            "example": [
              "123e4567-e89b-12d3-a456-426614174000",
              "123e4567-e89b-12d3-a456-426614174001"
            ]
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "List of group UUIDs to receive the notification. All users in these groups will receive the notification. Can be combined with users.",
            "example": [
              "123e4567-e89b-12d3-a456-426614174010"
            ]
          },
          "title": {
            "type": "string",
            "description": "Title of the notification (required)",
            "example": "System Update"
          },
          "message": {
            "type": "string",
            "description": "The notification message content (required)",
            "example": "The system will be undergoing maintenance on Sunday at 2 AM."
          },
          "priority": {
            "type": "boolean",
            "default": false,
            "description": "Priority flag of the notification. High priority notifications may be displayed more prominently.",
            "example": true
          },
          "shortDescription": {
            "type": "string",
            "description": "Short description or preview of the notification",
            "example": "Scheduled maintenance notification"
          },
          "notifyType": {
            "type": "string",
            "enum": [
              "Mail",
              "UI",
              "All"
            ],
            "description": "Notification delivery method:\n- Mail: Send only via email\n- UI: Display only in the UI\n- All: Send via both email and UI",
            "example": "All"
          },
          "notificationType": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Congratulation",
              "None"
            ],
            "example": "Info"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier of the notification (auto-generated)",
            "example": "123e4567-e89b-12d3-a456-426614174020"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the user who receives the notification",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "title": {
            "type": "string",
            "description": "Title of the notification",
            "example": "System Update"
          },
          "message": {
            "type": "string",
            "description": "The notification message content",
            "example": "The system will be undergoing maintenance on Sunday at 2 AM."
          },
          "shortDescription": {
            "type": "string",
            "description": "Short description or preview of the notification",
            "example": "Scheduled maintenance notification"
          },
          "priority": {
            "type": "boolean",
            "description": "Priority flag of the notification",
            "example": true
          },
          "notifyType": {
            "type": "string",
            "enum": [
              "Mail",
              "UI",
              "All"
            ],
            "description": "Notification delivery method",
            "example": "All"
          },
          "notificationType": {
            "type": "string",
            "enum": [
              "Info",
              "Warning",
              "Congratulation",
              "None"
            ],
            "description": "Visual display type",
            "example": "Info"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the notification was created and received (ISO 8601 format)",
            "example": "2025-10-15T10:30:00Z"
          },
          "readAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Timestamp when the notification was read (ISO 8601 format). Null if the notification is unread.",
            "example": "2025-10-15T11:00:00Z"
          }
        }
      },
      "EmailNotificationRequestDto": {
        "type": "object",
        "required": [
          "to",
          "subject"
        ],
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            },
            "minItems": 1,
            "description": "List of email addresses to send the email to (required). Each email must be a valid email address.",
            "example": [
              "user@example.com",
              "admin@example.com"
            ]
          },
          "subject": {
            "type": "string",
            "minLength": 1,
            "description": "Email subject line (required)",
            "example": "Welcome to Our Platform"
          },
          "text": {
            "type": "string",
            "description": "Plain text email body content. Use this for simple text-only emails. If a template is specified, this field is ignored.",
            "example": "Hello! Welcome to our platform. We're excited to have you here."
          },
          "template": {
            "type": "string",
            "enum": [
              "WELCOME",
              "RESET_PASSWORD",
              "GENERIC_WITH_CTA"
            ],
            "description": "Predefined email template to use:\n- WELCOME: Welcome email template for new users\n- RESET_PASSWORD: Password reset email template\n- GENERIC_WITH_CTA: Generic template with a call-to-action button\n\nIf specified, the 'text' field is ignored and the template is used instead.",
            "example": "WELCOME"
          },
          "variables": {
            "type": "object",
            "additionalProperties": true,
            "description": "Key-value pairs of variables to inject into the email template. The required variables depend on the chosen template:\n- WELCOME: userName, activationLink\n- RESET_PASSWORD: userName, resetLink\n- GENERIC_WITH_CTA: title, message, ctaText",
            "example": {
              "userName": "John Doe",
              "activationLink": "https://example.com/activate/abc123"
            }
          },
          "ctaLink": {
            "type": "string",
            "format": "uri",
            "description": "Call-to-action link URL. Used with GENERIC_WITH_CTA template to specify the button destination.",
            "example": "https://example.com/profile/complete"
          },
          "replyTo": {
            "type": "string",
            "format": "email",
            "description": "Reply-to email address. If specified, replies to the email will be sent to this address instead of the sender.",
            "example": "support@example.com"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message summary",
            "example": "Bad Request"
          },
          "details": {
            "type": "string",
            "description": "Detailed error description",
            "example": "Invalid email address format"
          }
        }
      }
    }
  }
}
